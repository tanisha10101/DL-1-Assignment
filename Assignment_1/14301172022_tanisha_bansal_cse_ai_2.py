# -*- coding: utf-8 -*-
"""14301172022_TANISHA BANSAL_CSE AI - 2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vlWnxQLGed9RMqvePCBp6HkwIkla8luG

**Submitted by:-**

**NAME:- TANISHA BANSAL**

**BATCH:- CSE-AI - 2 (2026)**

**ROLL NO.:- 14301172022**

**COURSE:- DEEP LEARNING PRACTICALS - EXPERIMENT 1**

Q1) Upload a file to colab
"""

from google.colab import files
uploaded = files.upload()

"""Q2) Download a file from colab.

For this, I will first be generating a sample file to initiate the download process.
"""

with open('sample.txt', 'w') as f:
    f.write('This is a sample file.')

"""Now, Downloading this sample file"""

files.download('sample.txt')

"""Q3) Change the colab runtime. Verify by running following commands:

import torch


torch.cuda.is_available()
"""

import torch
print("Is CUDA available? ", torch.cuda.is_available())

"""Q4) Install packages in colab. Try installing polyglot package."""

!pip install polyglot

"""INSTALLING SOME OF IT'S DEPENDANCIES ALSO ONE BY ONE:-"""

!pip install pyicu

!pip install pycld2

!pip install morfessor

"""Q5) Unzip a file in colab."""

uploaded = files.upload()

import zipfile

# Use the correct file name
with zipfile.ZipFile('example.zip', 'r') as example:
    zip_ref.extractall('example')

"""Q6) Using matplotlib library for visualisation.

"""

import matplotlib.pyplot as plt
import numpy as np

# Sample data
x = np.linspace(0, 20, 100)
y = np.sin(x)

plt.plot(x, y)
plt.title('Sine Wave')
plt.xlabel('X axis')
plt.ylabel('Y axis')
plt.show()

"""Q7) Exploring the numpy library in python to perform fundamental operations on arrays."""

import numpy as np

"""A) Print array size:"""

arr = np.array([[1, 2, 3], [4, 5, 6], [7,8,9]])
print("Array Size: ", arr.size)

"""B) Iterate array using nditer."""

print("Iterating the array:")
for a in np.nditer(arr):
    print(a, end=' ')
print()

"""C) Create an array from tuple"""

tupl = (10,11,12)
array_from_tup = np.array(tupl)
print("Array from the tuple: ", array_from_tup)

"""D) Create 3x4 array with all zeros using np.zeroes"""

all_zeros_array = np.zeros((3, 4))
print("3x4 array with all zeros:\n", all_zeros_array)

"""E) Create sequence of integers from 0 to 30 with step size 5"""

Sequence_arr = np.arange(0, 31, 5)
print("Sequence of integers from 0 to 30 with step size 5: ", Sequence_arr)

"""F) Reshape an array 2x4 to 2x2x3"""

prev_array_2x4 = np.arange(8).reshape((2, 4))
arr_reshaped = prev_array_2x4.reshape((2, 2, 2))
print("Reshaped array from 2x4 to 2x2x2:\n", arr_reshaped)

"""G) Flatten an array"""

flat_arr = arr_reshaped.flatten()
print("Flattened array: ", flat_arr)

"""H) Slice array with 2 rows and 2 columns"""

sliced_arr = arr[:2, :2]
print("Sliced array with 2 rows and 2 columns:\n", sliced_arr)